(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{266:function(e,t,v){"use strict";v.r(t);var _=v(28),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[e._v("#")]),e._v(" 对象")]),e._v(" "),v("h6",{attrs:{id:"两种定义方式-生成的对象相同"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两种定义方式-生成的对象相同"}},[e._v("#")]),e._v(" 两种定义方式,生成的对象相同")]),e._v(" "),v("ol",[v("li",[e._v("声明(文字)形式 var obj = {}，可添加多个键值对[常用]")]),e._v(" "),v("li",[e._v("构造形式       var obj = new Object()，逐个添加属性")])]),e._v(" "),v("h6",{attrs:{id:"数据类型8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型8"}},[e._v("#")]),e._v(" 数据类型8")]),e._v(" "),v("ol",[v("li",[e._v("string")]),e._v(" "),v("li",[e._v("number")]),e._v(" "),v("li",[e._v("boolean")]),e._v(" "),v("li",[e._v("undefined")]),e._v(" "),v("li",[e._v("null")]),e._v(" "),v("li",[e._v("BigInt")]),e._v(" "),v("li",[e._v("Symbol\n------栈")]),e._v(" "),v("li",[e._v("Object\n------堆")])]),e._v(" "),v("h6",{attrs:{id:"内置对象9"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置对象9"}},[e._v("#")]),e._v(" 内置对象9")]),e._v(" "),v("ol",[v("li",[e._v("String")]),e._v(" "),v("li",[e._v("Number")]),e._v(" "),v("li",[e._v("Boolean")]),e._v(" "),v("li",[e._v("Object")]),e._v(" "),v("li",[e._v("Function")]),e._v(" "),v("li",[e._v("Array")]),e._v(" "),v("li",[e._v("Date")]),e._v(" "),v("li",[e._v("RegExp")]),e._v(" "),v("li",[e._v("Error")])]),e._v(" "),v("p",[e._v("tips:")]),e._v(" "),v("ol",[v("li",[e._v("string、number、boolean:js引擎运行中会把基本类型中的string、number、boolean字面量自动转成对象类型")]),e._v(" "),v("li",[e._v("undefined、null:没有构造形式，只有文字形式")]),e._v(" "),v("li",[e._v("Date:只有构造形式，没有文字形式")]),e._v(" "),v("li",[e._v("Object、Array、Function、RegExp:有构造形式有文字形式，是对象，不是字面量")]),e._v(" "),v("li",[e._v("Error:抛异常时自动创建，很少显示[new Error(..)]创建 *")])]),e._v(" "),v("h6",{attrs:{id:"属性名-是字符串非则自动转换成字符串-和值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性名-是字符串非则自动转换成字符串-和值"}},[e._v("#")]),e._v(" 属性名[是字符串非则自动转换成字符串]和值")]),e._v(" "),v("ul",[v("li",[e._v('两种方式访问值: .和[" "]\n'),v("ul",[v("li",[e._v(".操作符 要求属性名满足标识符的命名规范")]),e._v(" "),v("li",[e._v('[" "]  属性名可以是任意'),v("a",{attrs:{href:"https://www.cnblogs.com/tsingke/p/10853936.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("UTF-8/Unicode"),v("OutboundLink")],1),e._v("字符串[该字符串可在程序中构造]")])])]),e._v(" "),v("li",[e._v("计算属性名\n"),v("ul",[v("li",[e._v("场景:Symbol")])])]),e._v(" "),v("li",[e._v("属性访问的函数:可能有隐式绑定this   [super?][简易函数声明语法？]")]),e._v(" "),v("li",[e._v("数组的特殊之处\n"),v("ul",[v("li",[e._v('添加命名属性[.baz/["baz"]]，不会增加数组长度')]),e._v(" "),v("li",[e._v("添加命名属性[形如3,3会变成数值下标]，会增加数组长度")])])])]),e._v(" "),v("h6",{attrs:{id:"复制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#复制"}},[e._v("#")]),e._v(" 复制")]),e._v(" "),v("ul",[v("li",[e._v("浅复制\n"),v("ul",[v("li",[e._v("Object.assign({目标对象},源对象1,源对象2...)\n"),v("ul",[v("li",[e._v("原理:目标对象=遍历源对象的可枚举的自有键[enumerable.owned.key]")])])])])])]),e._v(" "),v("h6",{attrs:{id:"属性描述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性描述"}},[e._v("#")]),e._v(" 属性描述")]),e._v(" "),v("ul",[v("li",[e._v("writable:false,对属性值修改 静默失败；严格模式下报错TypeError")]),e._v(" "),v("li",[e._v("configurable:false,单向操作TypeError。")]),e._v(" "),v("li",[e._v("writable可true改为false，反之不可")]),e._v(" "),v("li",[e._v("delete 该属性，静默失败\n"),v("ul",[v("li",[e._v("删除对象，不被引用的对象/函数会被垃圾回收")])])]),e._v(" "),v("li",[e._v("enumerable:false,不可枚举 for..in")])]),e._v(" "),v("h6",{attrs:{id:"浅不变性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浅不变性"}},[e._v("#")]),e._v(" 浅不变性")]),e._v(" "),v("ol",[v("li",[e._v("对象常量\nwritable:false configurable:false")]),e._v(" "),v("li",[e._v("禁止扩展\nObject.preventExtensions(..)\n"),v("ul",[v("li",[e._v("非严格模式下，静默失败")]),e._v(" "),v("li",[e._v("严格模式下，TypeError")])])]),e._v(" "),v("li",[e._v("密封,不可添加属性、不可配置现有属性、不可删除现有属性 可以修改属性值\n"),v("ul",[v("li",[e._v("Object.seal(..)\n"),v("ul",[v("li",[e._v("原理:Object.preventExtensions(..) configurable:false")])])])])]),e._v(" "),v("li",[e._v("冻结  ...不可以修改属性值。不会影响对象引用的其他对象\n"),v("ul",[v("li",[e._v("Object.freeze(..)\n"),v("ul",[v("li",[e._v("原理:Object.seal() writable:false")])])]),e._v(" "),v("li",[e._v("深度冻结\n"),v("ul",[v("li",[e._v("Object.freeze(..) 在遍历对象上Object.freeze(..)")])])])])])]),e._v(" "),v("h6",{attrs:{id:"get"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" [[Get]]")]),e._v(" "),v("ul",[v("li",[e._v("对象内置\n"),v("ul",[v("li",[e._v("算法：obj.a 在对象中查找是否有名称相同的属性，没有则遍历[[Prototype]]链，都没有返回undefined")])])]),e._v(" "),v("li",[e._v("如何判断对象是值为undefined还是不存在？")])]),e._v(" "),v("h6",{attrs:{id:"put"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[e._v("#")]),e._v(" [[Put]]")]),e._v(" "),v("ul",[v("li",[e._v("对象存在该属性\n"),v("ol",[v("li",[e._v("属性是否是访问描述符？是且存在setter调用setter")]),e._v(" "),v("li",[e._v("属性的数据描述中writable是否是false？是，非严格模式下静默失败严格模式下TypeError")]),e._v(" "),v("li",[e._v("都不是，将该值设置为属性的值\n对象不存在该属性")])])])]),e._v(" "),v("h6",{attrs:{id:"getter和setter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getter和setter"}},[e._v("#")]),e._v(" Getter和Setter")]),e._v(" "),v("ul",[v("li",[e._v("getter setter可对单个属性改写默认操作  成对出现")])]),e._v(" "),v("h6",{attrs:{id:"存在性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存在性"}},[e._v("#")]),e._v(" 存在性")]),e._v(" "),v("ul",[v("li",[e._v("判断属性名是否存在\n"),v("ul",[v("li",[e._v('in             检查原型链:\n"a" in obj')]),e._v(" "),v("li",[e._v("hasOwnProperty 检查对象本身,不检查原型链:\n"),v("ul",[v("li",[e._v('obj.hasOwnProperty("a")')]),e._v(" "),v("li",[e._v('Object.prototype.hasOwnProperty.call(obj,"a")[针对如Object.create(null)创建的对象，没有连接到Object.prototype]')])])])])]),e._v(" "),v("li",[e._v("判断是否可枚举\n"),v("ul",[v("li",[e._v("存在、访问有值但不在for..in循环中")]),e._v(" "),v("li",[e._v("propertyIsEnumerable(..) 属性名直接存在对象中且满足enumerable:true")]),e._v(" "),v("li",[e._v("Object.keys(..) 返回该对象所有可枚举属性\n"),v("ul",[v("li",[e._v("Object.getOwnPropertyNames(..)返回该对象所有属性")])])])])])]),e._v(" "),v("h6",{attrs:{id:"遍历"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#遍历"}},[e._v("#")]),e._v(" 遍历")]),e._v(" "),v("ul",[v("li",[e._v("对象属性:for..in 遍历对象可枚举属性列表\n"),v("ul",[v("li",[e._v("不同js引擎下遍历顺序不同")])])]),e._v(" "),v("li",[e._v("数组下标:for循环  遍历数值索引的数组,遍历下标来指向值\n"),v("ul",[v("li",[e._v("数组辅助迭代器\n"),v("ul",[v("li",[e._v("forEach(..)")]),e._v(" "),v("li",[e._v("every(..)")]),e._v(" "),v("li",[e._v("some(..)")])])])])]),e._v(" "),v("li",[e._v("遍历值:for..of[ES6]\n"),v("ul",[v("li")])])]),e._v(" "),v("h5",{attrs:{id:"混合对象-类-结论-在js中模拟类是得不偿失但-虽然能解决当前问题-但会埋下更多但隐患"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#混合对象-类-结论-在js中模拟类是得不偿失但-虽然能解决当前问题-但会埋下更多但隐患"}},[e._v("#")]),e._v(" 混合对象“类”[结论:在js中模拟类是得不偿失但,虽然能解决当前问题,但会埋下更多但隐患]")]),e._v(" "),v("ul",[v("li",[e._v("类的机制：抽象表示，要操作先实例化\n构造函数初始化实例")]),e._v(" "),v("li",[e._v("类的继承\n"),v("ul",[v("li",[e._v("多态：\n相对多态使用相对引用查找上一层\n继承链的不同层次中一个方法可以被多次定义，调用时自动选择合适的定义")]),e._v(" "),v("li",[e._v("多重继承  ：所有父类的定义都会被复制到子类中\n"),v("ul",[v("li",[e._v("js本身不提供多重继承")])])])])]),e._v(" "),v("li",[e._v("混入 "),v("em",[e._v("模拟类的复制行为，但会产生丑陋且脆弱但语法")]),e._v(" "),v("ul",[v("li",[e._v("显示混入\n"),v("ul",[v("li",[e._v("显示伪多态，需要手动创建函数关联[导致代码复杂难以阅读维护，避免使用]\n"),v("ul",[v("li",[e._v("遍历源对象，将目标对象中没有的属性值赋给目标对象,同时在目标对象中引用源对象的同名函数")])])]),e._v(" "),v("li",[e._v("混合复制\n"),v("ol",[v("li",[e._v("遍历源对象，将源对象中所有属性赋给目标对象.")]),e._v(" "),v("li",[e._v("通过2步mixin复制对象")])])]),e._v(" "),v("li",[e._v("寄生继承\n"),v("ul",[v("li",[e._v("将函数挂在源对象的prototype上，new目标对象并返回\n隐式混入")]),e._v(" "),v("li",[e._v("利用this重新绑定功能")])])])])])])])]),e._v(" "),v("h5",{attrs:{id:"创建对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建对象"}},[e._v("#")]),e._v(" 创建对象")]),e._v(" "),v("ol",[v("li",[e._v("Object构造函数 var obj = new Object();")]),e._v(" "),v("li",[e._v("字面量 var obj = {} "),v("strong",[e._v("常用")]),e._v(" "),v("ul",[v("li",[e._v("创建一个空对象var obj = Object.create(null)")])])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var obj1 = new Object();\nvar obj2 = {};\n")])])]),v("p",[v("img",{attrs:{src:"img/%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.png",alt:"创建对象"}})]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var ø = Object.create(null);\nvar obj11 = Object.create({});\n")])])]),v("p",[v("img",{attrs:{src:"img/%E5%88%9B%E5%BB%BA%E7%A9%BA%E5%AF%B9%E8%B1%A1.png",alt:"创建空对象"}})]),e._v(" "),v("blockquote",[v("p",[e._v("缺点：同一个接口创建很多对象，会产生大量的重复代码 [1]")])]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("工厂模式")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('function createPerson(name,age,job){\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n    o.sayName = function(){\n        alert(this.name);\n    };\n    return o;\n}\nvar person1 = createPerson("Ni",29,"s e");\nvar person2 = createPerson("Ge",27,"Doctor");\n')])])]),v("blockquote",[v("p",[e._v("优点：解决了创建多个对象的问题\n缺点：无法知道对象类型")])]),e._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[e._v("构造函数模式")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('function Person(name,age,job){\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.sayName = function(){\n        alert(this.name);\n    };\n}\nvar person1 = new Person("Ni",29,"s e");\nvar person2 = new Person("Ge",27,"Doctor");\n')])])]),v("blockquote",[v("p",[e._v("优点：可知道对象类型\n缺点：重新创建方法;将方法定义在外面则非封装")])]),e._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[e._v("原型模式")])]),e._v(" "),v("p",[e._v("结论：构造器定义属性，原型定义方法。")]),e._v(" "),v("p",[e._v("######额外的")]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("constructor instanceof prototype "),v("strong",[e._v("proto")]),e._v(" typeof")]),e._v(" "),v("ul",[v("li",[e._v("constructor 标识对象类型")]),e._v(" "),v("li",[e._v("instanceof 检测对象类型")]),e._v(" "),v("li",[e._v("prototype-----函数")]),e._v(" "),v("li",[e._v("__proto__ Object.getPrototypeOf ---对象")]),e._v(" "),v("li",[e._v("typeof")])])]),e._v(" "),v("li",[v("strong",[e._v("new做了什么")]),e._v(" "),v("ol",[v("li",[e._v("创建一个对象")]),e._v(" "),v("li",[e._v("将构造函数的作用域赋给新对象(this指向新对象)")]),e._v(" "),v("li",[e._v("执行构造函数的代码")]),e._v(" "),v("li",[e._v("返回新对象")])])])]),e._v(" "),v("p",[e._v("######参考\n[1]:javascript高级程序设计\n[2]:你不知道的javascript\n[3]:mdn")]),e._v(" "),v("p",[v("em",[e._v("验证环境:chrome79.0.3945.88 && firefox71.0")])])])}),[],!1,null,null,null);t.default=l.exports}}]);